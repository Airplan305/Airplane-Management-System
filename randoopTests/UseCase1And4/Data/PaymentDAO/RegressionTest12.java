
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test001"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test002"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment40 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment40);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test003"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test004"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment41 = null;
    boolean b42 = paymentDAO0.savePayment(payment41);
    UseCase1And4.business.Payment payment44 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment45 = null;
    boolean b46 = paymentDAO0.savePayment(payment45);
    UseCase1And4.business.Payment payment48 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment50 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment50);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test005"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test006"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test007"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test008"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test009"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test010"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test011"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test012"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test013"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test014"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test015"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test016"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test017"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test018"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test019"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test020"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test021"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test022"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test023"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test024"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test025"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test026"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test027"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test028"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test029"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test030"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test031"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test032"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test033"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test034"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test035"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test036"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test037"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test038"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test039"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test040"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test041"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test042"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test043"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test044"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test045"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test046"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test047"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test048"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test049"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment42 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment42);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test050"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test051"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test052"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test053"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test054"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test055"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test056"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test057"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test058"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test059"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test060"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test061"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test062"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test063"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test064"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test065"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test066"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test067"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test068"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test069"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test070"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test071"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test072"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test073"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test074"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test075"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test076"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test077"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test078"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test079"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test080"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test081"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test082"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test083"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test084"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment41 = null;
    boolean b42 = paymentDAO0.savePayment(payment41);
    UseCase1And4.business.Payment payment43 = null;
    boolean b44 = paymentDAO0.savePayment(payment43);
    UseCase1And4.business.Payment payment46 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment47 = null;
    boolean b48 = paymentDAO0.savePayment(payment47);
    UseCase1And4.business.Payment payment49 = null;
    boolean b50 = paymentDAO0.savePayment(payment49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test085"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test086"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test087"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test088"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment42 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment44 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment44);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test089"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test090"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test091"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test092"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test093"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test094"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test095"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test096"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test097"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test098"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test099"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test100"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test101"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test102"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test103"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test104"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test105"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test106"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test107"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test108"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test109"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test110"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test111"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test112"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test113"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test114"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test115"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test116"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test117"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test118"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test119"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test120"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test121"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test122"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test123"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test124"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test125"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test126"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test127"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test128"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test129"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test130"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test131"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test132"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test133"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test134"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test135"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test136"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test137"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test138"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test139"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test140"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test141"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test142"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test143"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test144"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test145"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test146"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    UseCase1And4.business.Payment payment40 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment41 = null;
    boolean b42 = paymentDAO0.savePayment(payment41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test147"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test148"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test149"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test150"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test151"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test152"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test153"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test154"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test155"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test156"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test157"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test158"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test159"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test160"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test161"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test162"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test163"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test164"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test165"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test166"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test167"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test168"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test169"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test170"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test171"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test172"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test173"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test174"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment41 = null;
    boolean b42 = paymentDAO0.savePayment(payment41);
    UseCase1And4.business.Payment payment44 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment45 = null;
    boolean b46 = paymentDAO0.savePayment(payment45);
    UseCase1And4.business.Payment payment48 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment48);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test175"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test176"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test177"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test178"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test179"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test180"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test181"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test182"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test183"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test184"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test185"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test186"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test187"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test188"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test189"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test190"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test191"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test192"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test193"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test194"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test195"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test196"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test197"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test198"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test199"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test200"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test201"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test202"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test203"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test204"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test205"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test206"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test207"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test208"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test209"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test210"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test211"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test212"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test213"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test214"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test215"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test216"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test217"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test218"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test219"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test220"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test221"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test222"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test223"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test224"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test225"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test226"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test227"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test228"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test229"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test230"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test231"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment40 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment40);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test232"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test233"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test234"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test235"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test236"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test237"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test238"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test239"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test240"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test241"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test242"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test243"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test244"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test245"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test246"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test247"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test248"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test249"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test250"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test251"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test252"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test253"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test254"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment40 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment42 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment42);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test255"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test256"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test257"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test258"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test259"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test260"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test261"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment37 = null;
    boolean b38 = paymentDAO0.savePayment(payment37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test262"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test263"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test264"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test265"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test266"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test267"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test268"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test269"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test270"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test271"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test272"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test273"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test274"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test275"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test276"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment40 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment40);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test277"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test278"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test279"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test280"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test281"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test282"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test283"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test284"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test285"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test286"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment42 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment42);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test287"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test288"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test289"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test290"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test291"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test292"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test293"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test294"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test295"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test296"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test297"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test298"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test299"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test300"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test301"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test302"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test303"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test304"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test305"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test306"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test307"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test308"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test309"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test310"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test311"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test312"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test313"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test314"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test315"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test316"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test317"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test318"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test319"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test320"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test321"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test322"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test323"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment35 = null;
    boolean b36 = paymentDAO0.savePayment(payment35);
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment42 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment44 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment44);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test324"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test325"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test326"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test327"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test328"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test329"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test330"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test331"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test332"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test333"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test334"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test335"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test336"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test337"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test338"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test339"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test340"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment40 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment41 = null;
    boolean b42 = paymentDAO0.savePayment(payment41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test341"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test342"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test343"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test344"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test345"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test346"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test347"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test348"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test349"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test350"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test351"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment38 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment39 = null;
    boolean b40 = paymentDAO0.savePayment(payment39);
    UseCase1And4.business.Payment payment41 = null;
    boolean b42 = paymentDAO0.savePayment(payment41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test352"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test353"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test354"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test355"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test356"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test357"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test358"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test359"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test360"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment33 = null;
    boolean b34 = paymentDAO0.savePayment(payment33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test361"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment13 = null;
    boolean b14 = paymentDAO0.savePayment(payment13);
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test362"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment11 = null;
    boolean b12 = paymentDAO0.savePayment(payment11);
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test363"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment25 = null;
    boolean b26 = paymentDAO0.savePayment(payment25);
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment29 = null;
    boolean b30 = paymentDAO0.savePayment(payment29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test364"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment17 = null;
    boolean b18 = paymentDAO0.savePayment(payment17);
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment21 = null;
    boolean b22 = paymentDAO0.savePayment(payment21);
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment27 = null;
    boolean b28 = paymentDAO0.savePayment(payment27);
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment31 = null;
    boolean b32 = paymentDAO0.savePayment(payment31);
    UseCase1And4.business.Payment payment34 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment36 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment36);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test365"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment1 = null;
    boolean b2 = paymentDAO0.savePayment(payment1);
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment8 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment10 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment20 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment24 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment28 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment30 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment32 = paymentDAO0.getPayment("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment32);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test366"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment4 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment6 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment16 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment16);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest12.test367"); }

    UseCase1And4.data.PaymentDAO paymentDAO0 = new UseCase1And4.data.PaymentDAO();
    UseCase1And4.business.Payment payment2 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment3 = null;
    boolean b4 = paymentDAO0.savePayment(payment3);
    UseCase1And4.business.Payment payment5 = null;
    boolean b6 = paymentDAO0.savePayment(payment5);
    UseCase1And4.business.Payment payment7 = null;
    boolean b8 = paymentDAO0.savePayment(payment7);
    UseCase1And4.business.Payment payment9 = null;
    boolean b10 = paymentDAO0.savePayment(payment9);
    UseCase1And4.business.Payment payment12 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment14 = paymentDAO0.getPayment("hi!");
    UseCase1And4.business.Payment payment15 = null;
    boolean b16 = paymentDAO0.savePayment(payment15);
    UseCase1And4.business.Payment payment18 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment19 = null;
    boolean b20 = paymentDAO0.savePayment(payment19);
    UseCase1And4.business.Payment payment22 = paymentDAO0.getPayment("");
    UseCase1And4.business.Payment payment23 = null;
    boolean b24 = paymentDAO0.savePayment(payment23);
    UseCase1And4.business.Payment payment26 = paymentDAO0.getPayment("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(payment26);

  }

}
